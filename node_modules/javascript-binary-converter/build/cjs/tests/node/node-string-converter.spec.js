"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const expect_1 = require("expect");
const converter_1 = __importDefault(require("../../converter"));
describe('Node StringConverter tests', () => {
    it('Should return binary, from string', async function () {
        let binary = (0, converter_1.default)('A').toBinary();
        (0, expect_1.expect)(binary).toBe('01000001');
        binary = (0, converter_1.default)('A A').toBinary();
        (0, expect_1.expect)(binary).toBe('010000010010000001000001');
        binary = (0, converter_1.default)(`A\nA`).toBinary();
        (0, expect_1.expect)(binary).toBe('010000010000101001000001');
        binary = (0, converter_1.default)('ðŸ’œ').toBinary();
        (0, expect_1.expect)(binary).toBe('11110000100111111001001010011100');
    });
    it('Should return uint8Array, from string', async function () {
        const uint8 = (0, converter_1.default)(`A\nA`).toUint8Array();
        const arrayFromUint8 = Array.from(uint8);
        (0, expect_1.expect)(arrayFromUint8).toStrictEqual([65, 10, 65]);
    });
});
//# sourceMappingURL=node-string-converter.spec.js.map