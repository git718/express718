"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.splitBinaryStringToBytes = exports.getInverseBinary = exports.getTwosComplementBinary = void 0;
const string_1 = require("./string");
function getTwosComplementBinary(bits) {
    const inverse = getInverseBinary(bits);
    const integer = (parseInt(inverse, 2) + 1);
    return integer.toString(2);
}
exports.getTwosComplementBinary = getTwosComplementBinary;
function getInverseBinary(bits) {
    let inverse = '';
    for (let i = 0; i < bits.length; i++) {
        inverse += (bits[i] === '0' ? '1' : '0');
    }
    return inverse;
}
exports.getInverseBinary = getInverseBinary;
function splitBinaryStringToBytes(binaryString) {
    return (0, string_1.splitStringToChunks)(binaryString, 8);
}
exports.splitBinaryStringToBytes = splitBinaryStringToBytes;
// export function splitBinaryStringToBytes(binaryString: string) {
//     const bytes = []
//     let currentBitString = ""
//     for (let i = 1; i <= binaryString.length; i++) {
//         currentBitString += binaryString[i - 1]
//         if (i % 8 === 0 || i === binaryString.length) {
//             bytes.push(currentBitString)
//             currentBitString = ""
//         }
//     }
//     return bytes
// }
//# sourceMappingURL=bits.js.map