"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const hex_1 = require("../utils/hex");
const NumberConverter_1 = __importDefault(require("./NumberConverter"));
/**
 * To avoid precision loss(toFloat64), separate handling of hex strings seems to be needed
 */
class HexStringConverter {
    constructor(original) {
        this.original = original;
        this.numberConverter = new NumberConverter_1.default(parseInt(original, 16));
    }
    toBinary() {
        return this.numberConverter.toBinary();
    }
    toInteger({ isSigned = false } = {}) {
        const decimal = (0, hex_1.hexStringToInteger)(this.original, { isSigned });
        return decimal;
    }
    toFloat({ precision = 'SINGLE' } = {}) {
        const float = (0, hex_1.hexStringToFloat)(this.original, { precision });
        return float;
    }
}
exports.default = HexStringConverter;
//# sourceMappingURL=HexStringConverter.js.map