export function isNumeric(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
}
export function isFloat(number) {
    return typeof number === 'number' && !Number.isInteger(number);
}
export function isBigInt(number) {
    return typeof number === 'bigint' || (number > 4294967295 || number < -2147483647);
}
export function getClosestDividable(divided, divisor) {
    let modulo = divided % divisor;
    while (modulo !== 0) {
        divided++;
        modulo = divided % divisor;
    }
    return divided;
}
export function normalizeBigInt(decimal, nBits = BigInt(64)) {
    [decimal, nBits] = [BigInt(decimal), BigInt(nBits)];
    if (decimal >= 0)
        return decimal;
    return (BigInt(BigInt(2) ** nBits) + decimal);
}
//# sourceMappingURL=number.js.map