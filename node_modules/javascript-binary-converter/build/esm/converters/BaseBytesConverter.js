import { getBlobClass } from "../utils/crossPlatform";
import { binaryToImage } from "../utils/image";
export class BaseBytesConverter {
    constructor(original) {
        this.original = original;
    }
    toText() {
        const uint8 = this.toUint8Array();
        const decoder = new TextDecoder();
        return decoder.decode(uint8);
    }
    async toBlob(config) {
        const BlobClass = await getBlobClass();
        return new BlobClass([this.toUint8Array()], config);
    }
    async toImage(config) {
        const BlobClass = await getBlobClass();
        const blob = new BlobClass([this.toUint8Array()]);
        return binaryToImage(blob, config && config);
    }
}
//# sourceMappingURL=BaseBytesConverter.js.map