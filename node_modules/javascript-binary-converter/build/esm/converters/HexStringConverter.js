import { hexStringToInteger, hexStringToFloat } from "../utils/hex";
import NumberConverter from "./NumberConverter";
/**
 * To avoid precision loss(toFloat64), separate handling of hex strings seems to be needed
 */
export default class HexStringConverter {
    constructor(original) {
        this.original = original;
        this.numberConverter = new NumberConverter(parseInt(original, 16));
    }
    toBinary() {
        return this.numberConverter.toBinary();
    }
    toInteger({ isSigned = false } = {}) {
        const decimal = hexStringToInteger(this.original, { isSigned });
        return decimal;
    }
    toFloat({ precision = 'SINGLE' } = {}) {
        const float = hexStringToFloat(this.original, { precision });
        return float;
    }
}
//# sourceMappingURL=HexStringConverter.js.map